{"ast":null,"code":"var _jsxFileName = \"/Users/jennynguyen/Beta/keta-blog/src/context.js\";\nimport React, { Component } from 'react';\nimport Client from './contentful';\nconst PostContext = React.createContext();\n\nclass PostProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: [],\n      filterPosts: [],\n      loading: true,\n      keyword: ''\n    };\n\n    this.getData = async () => {\n      try {\n        let response = await Client.getEntries({\n          content_type: \"post\",\n          order: \"fields.dateUpdated\"\n        });\n        let post = this.formatData(response.items);\n        this.setState({\n          posts: response.items,\n          loading: false\n        });\n        console.log(response);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  formatDat(items) {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let image = item.fields.image.fields.file.url;\n      let author = {\n        name: item.fields.author.fields.name,\n        description: item.fields.author.fields.description\n      };\n      let post = { ...item.fields,\n        id,\n        image\n      };\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(PostContext.Provider, {\n      value: { ...this.state\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 4\n      }\n    }, this.props.children);\n  }\n\n}\n\nconst PostConsumer = PostContext.Consumer;\nexport function withPostConsumer(Component) {\n  return function consumerWrapper(props) {\n    return /*#__PURE__*/React.createElement(PostConsumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 10\n      }\n    }, value => /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      context: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 14\n      }\n    })));\n  };\n}\nexport { PostProvider, PostConsumer, PostContext };","map":{"version":3,"sources":["/Users/jennynguyen/Beta/keta-blog/src/context.js"],"names":["React","Component","Client","PostContext","createContext","PostProvider","state","posts","filterPosts","loading","keyword","getData","response","getEntries","content_type","order","post","formatData","items","setState","console","log","error","componentDidMount","formatDat","tempItems","map","item","id","sys","image","fields","file","url","author","name","description","render","props","children","PostConsumer","Consumer","withPostConsumer","consumerWrapper","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,MAAMC,WAAW,GAAGH,KAAK,CAACI,aAAN,EAApB;;AAEA,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACpCK,KADoC,GAC5B;AACPC,MAAAA,KAAK,EAAE,EADA;AAEPC,MAAAA,WAAW,EAAE,EAFN;AAGPC,MAAAA,OAAO,EAAE,IAHF;AAIPC,MAAAA,OAAO,EAAE;AAJF,KAD4B;;AAAA,SAQpCC,OARoC,GAQ1B,YAAY;AACrB,UAAG;AACF,YAAIC,QAAQ,GAAG,MAAMV,MAAM,CAACW,UAAP,CAAkB;AACtCC,UAAAA,YAAY,EAAE,MADwB;AAEtCC,UAAAA,KAAK,EAAE;AAF+B,SAAlB,CAArB;AAKA,YAAIC,IAAI,GAAG,KAAKC,UAAL,CAAgBL,QAAQ,CAACM,KAAzB,CAAX;AAEA,aAAKC,QAAL,CAAc;AACbZ,UAAAA,KAAK,EAAEK,QAAQ,CAACM,KADH;AAEbT,UAAAA,OAAO,EAAE;AAFI,SAAd;AAKAW,QAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;AAEA,OAfD,CAeE,OAAOU,KAAP,EAAc;AACfF,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACA;AACD,KA3BmC;AAAA;;AA6BpCC,EAAAA,iBAAiB,GAAI;AACpB,SAAKZ,OAAL;AACA;;AAEDa,EAAAA,SAAS,CAAEN,KAAF,EAAS;AACjB,QAAIO,SAAS,GAAGP,KAAK,CAACQ,GAAN,CAAUC,IAAI,IAAI;AAEjC,UAAIC,EAAE,GAAGD,IAAI,CAACE,GAAL,CAASD,EAAlB;AACA,UAAIE,KAAK,GAAGH,IAAI,CAACI,MAAL,CAAYD,KAAZ,CAAkBC,MAAlB,CAAyBC,IAAzB,CAA8BC,GAA1C;AACA,UAAIC,MAAM,GAAG;AACZC,QAAAA,IAAI,EAAER,IAAI,CAACI,MAAL,CAAYG,MAAZ,CAAmBH,MAAnB,CAA0BI,IADpB;AAEZC,QAAAA,WAAW,EAAET,IAAI,CAACI,MAAL,CAAYG,MAAZ,CAAmBH,MAAnB,CAA0BK;AAF3B,OAAb;AAKA,UAAIpB,IAAI,GAAG,EAAC,GAAGW,IAAI,CAACI,MAAT;AAAiBH,QAAAA,EAAjB;AAAqBE,QAAAA;AAArB,OAAX;AACA,KAVe,CAAhB;AAWA;;AAEDO,EAAAA,MAAM,GAAG;AACR,wBACC,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE,EAAC,GAAG,KAAK/B;AAAT,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKgC,KAAL,CAAWC,QADb,CADD;AAKA;;AArDmC;;AAwDrC,MAAMC,YAAY,GAAGrC,WAAW,CAACsC,QAAjC;AAEA,OAAO,SAASC,gBAAT,CAA0BzC,SAA1B,EAAqC;AAC3C,SAAO,SAAS0C,eAAT,CAAyBL,KAAzB,EAAgC;AACtC,wBAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACLM,KAAK,iBAAI,oBAAC,SAAD,oBAAeN,KAAf;AAAsB,MAAA,OAAO,EAAEM,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,CAAP;AAGA,GAJD;AAKA;AAED,SAAQvC,YAAR,EAAsBmC,YAAtB,EAAoCrC,WAApC","sourcesContent":["import React, {Component} from 'react';\nimport Client from './contentful';\n\nconst PostContext = React.createContext();\n\nclass PostProvider extends Component {\n\tstate = {\n\t\tposts: [],\n\t\tfilterPosts: [],\n\t\tloading: true,\n\t\tkeyword: ''\n\t}\n\n\tgetData = async () => {\n\t\ttry{\n\t\t\tlet response = await Client.getEntries({\n\t\t\t\tcontent_type: \"post\",\n\t\t\t\torder: \"fields.dateUpdated\"\n\t\t\t});\n\n\t\t\tlet post = this.formatData(response.items);\n\t\t\t\n\t\t\tthis.setState({\n\t\t\t\tposts: response.items,\n\t\t\t\tloading: false\n\t\t\t});\n\n\t\t\tconsole.log(response);\n\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\n\tcomponentDidMount () {\n\t\tthis.getData();\n\t}\n\n\tformatDat (items) {\n\t\tlet tempItems = items.map(item => {\n\n\t\t\tlet id = item.sys.id\n\t\t\tlet image = item.fields.image.fields.file.url;\n\t\t\tlet author = {\n\t\t\t\tname: item.fields.author.fields.name,\n\t\t\t\tdescription: item.fields.author.fields.description,\n\t\t\t}\n\n\t\t\tlet post = {...item.fields, id, image};\n\t\t});\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<PostContext.Provider value={{...this.state}}>\n\t\t\t\t{this.props.children}\n\t\t\t</PostContext.Provider>\n\t\t)\n\t}\n}\n\nconst PostConsumer = PostContext.Consumer;\n\nexport function withPostConsumer(Component) {\n\treturn function consumerWrapper(props) {\n\t\treturn <PostConsumer>\n\t\t\t{value => <Component {...props} context={value} /> }\n\t\t</PostConsumer>\n\t}\n}\n\nexport {PostProvider, PostConsumer, PostContext}"]},"metadata":{},"sourceType":"module"}