{"ast":null,"code":"var _jsxFileName = \"/Users/jennynguyen/Beta/keta-blog/src/context.js\";\nimport React, { Component } from 'react';\nimport Client from './contentful';\nconst PostContext = React.createContext();\n\nclass PostProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: [],\n      filterPosts: [],\n      loading: true,\n      keyword: ''\n    };\n\n    this.getData = async () => {\n      try {\n        let response = await Client.getEntries({\n          content_type: \"post\",\n          order: \"fields.dateUpdated\"\n        });\n        this.setState({\n          posts: response.items,\n          loading: false\n        });\n        console.log(response);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(PostContext.Provider, {\n      value: { ...this.state\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 4\n      }\n    }, this.props.children);\n  }\n\n}\n\nconst PostConsumer = PostContext.Consumer;\nexport function withPostConsumer(Component) {\n  return function consumerWrapper(props) {\n    return /*#__PURE__*/React.createElement(PostConsumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 10\n      }\n    }, value => /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      context: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 14\n      }\n    })));\n  };\n}\nexport { PostProvider, PostConsumer, PostContext };","map":{"version":3,"sources":["/Users/jennynguyen/Beta/keta-blog/src/context.js"],"names":["React","Component","Client","PostContext","createContext","PostProvider","state","posts","filterPosts","loading","keyword","getData","response","getEntries","content_type","order","setState","items","console","log","error","componentDidMount","render","props","children","PostConsumer","Consumer","withPostConsumer","consumerWrapper","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,MAAMC,WAAW,GAAGH,KAAK,CAACI,aAAN,EAApB;;AAEA,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACpCK,KADoC,GAC5B;AACPC,MAAAA,KAAK,EAAE,EADA;AAEPC,MAAAA,WAAW,EAAE,EAFN;AAGPC,MAAAA,OAAO,EAAE,IAHF;AAIPC,MAAAA,OAAO,EAAE;AAJF,KAD4B;;AAAA,SAQpCC,OARoC,GAQ1B,YAAY;AACrB,UAAG;AACF,YAAIC,QAAQ,GAAG,MAAMV,MAAM,CAACW,UAAP,CAAkB;AACtCC,UAAAA,YAAY,EAAE,MADwB;AAEtCC,UAAAA,KAAK,EAAE;AAF+B,SAAlB,CAArB;AAKA,aAAKC,QAAL,CAAc;AACbT,UAAAA,KAAK,EAAEK,QAAQ,CAACK,KADH;AAEbR,UAAAA,OAAO,EAAE;AAFI,SAAd;AAKAS,QAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AAEA,OAbD,CAaE,OAAOQ,KAAP,EAAc;AACfF,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACA;AACD,KAzBmC;AAAA;;AA2BpCC,EAAAA,iBAAiB,GAAI;AACpB,SAAKV,OAAL;AACA;;AAEDW,EAAAA,MAAM,GAAG;AACR,wBACC,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE,EAAC,GAAG,KAAKhB;AAAT,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKiB,KAAL,CAAWC,QADb,CADD;AAKA;;AArCmC;;AAwCrC,MAAMC,YAAY,GAAGtB,WAAW,CAACuB,QAAjC;AAEA,OAAO,SAASC,gBAAT,CAA0B1B,SAA1B,EAAqC;AAC3C,SAAO,SAAS2B,eAAT,CAAyBL,KAAzB,EAAgC;AACtC,wBAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACLM,KAAK,iBAAI,oBAAC,SAAD,oBAAeN,KAAf;AAAsB,MAAA,OAAO,EAAEM,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,CAAP;AAGA,GAJD;AAKA;AAED,SAAQxB,YAAR,EAAsBoB,YAAtB,EAAoCtB,WAApC","sourcesContent":["import React, {Component} from 'react';\nimport Client from './contentful';\n\nconst PostContext = React.createContext();\n\nclass PostProvider extends Component {\n\tstate = {\n\t\tposts: [],\n\t\tfilterPosts: [],\n\t\tloading: true,\n\t\tkeyword: ''\n\t}\n\n\tgetData = async () => {\n\t\ttry{\n\t\t\tlet response = await Client.getEntries({\n\t\t\t\tcontent_type: \"post\",\n\t\t\t\torder: \"fields.dateUpdated\"\n\t\t\t});\n\t\t\t\n\t\t\tthis.setState({\n\t\t\t\tposts: response.items,\n\t\t\t\tloading: false\n\t\t\t});\n\n\t\t\tconsole.log(response);\n\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\n\tcomponentDidMount () {\n\t\tthis.getData();\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<PostContext.Provider value={{...this.state}}>\n\t\t\t\t{this.props.children}\n\t\t\t</PostContext.Provider>\n\t\t)\n\t}\n}\n\nconst PostConsumer = PostContext.Consumer;\n\nexport function withPostConsumer(Component) {\n\treturn function consumerWrapper(props) {\n\t\treturn <PostConsumer>\n\t\t\t{value => <Component {...props} context={value} /> }\n\t\t</PostConsumer>\n\t}\n}\n\nexport {PostProvider, PostConsumer, PostContext}"]},"metadata":{},"sourceType":"module"}