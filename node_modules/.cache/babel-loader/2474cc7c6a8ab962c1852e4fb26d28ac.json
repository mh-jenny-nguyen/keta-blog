{"ast":null,"code":"var _jsxFileName = \"/Users/jennynguyen/Beta/keta-blog/src/containers/Detail/index.js\";\nimport React from 'react';\nimport Author from '../../components/Author';\nimport { useParams } from 'react-router-dom';\nimport { PostContext } from '../../context';\nimport { useContext } from 'react';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer';\n\nconst Detail = props => {\n  let {\n    slug\n  } = useParams();\n  let context = useContext(PostContext);\n  let {\n    getPost\n  } = context;\n  let detail = getPost(slug);\n\n  if (!detail) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 10\n      }\n    }, \"not found\");\n  }\n\n  let {\n    title,\n    category,\n    author,\n    dateCreated,\n    content\n  } = detail;\n  console.log(author);\n  const richTextOptions = {\n    renderNode: {\n      [BLOCKS.EMBEDDED_ASSET]: node => {\n        const {\n          title,\n          description,\n          file\n        } = node.data.target.fields;\n        const mimeType = file.contentType;\n        const mimeGroup = mimeType.split('/')[0];\n\n        switch (mimeGroup) {\n          case 'image':\n            return /*#__PURE__*/React.createElement(\"img\", {\n              className: \"img-responsive\",\n              title: title ? title : null,\n              alt: description ? description : null,\n              src: file.url,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 20\n              }\n            });\n\n          case 'application':\n            return /*#__PURE__*/React.createElement(\"a\", {\n              alt: description ? description : null,\n              href: file.url,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 20\n              }\n            }, title ? title : file.details.fileName);\n\n          default:\n            return /*#__PURE__*/React.createElement(\"span\", {\n              style: {\n                backgroundColor: 'red',\n                color: 'white'\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 20\n              }\n            }, \" \", mimeType, \" embedded asset \");\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-container post-detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"post-detail__entry-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"!#\",\n    className: \"post-detail__cat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, category), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"post-detail__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-detail__entry-meta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"post-detail__posted-on\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 6\n    }\n  }, \"Posted on\\xA0\", /*#__PURE__*/React.createElement(\"time\", {\n    className: \"post-detail__datetime\",\n    dateTime: \"2019-08-08T13:56:34+00:00\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, dateCreated)), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"post-detail__byline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"post-detail__by\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"\\xA0by \", /*#__PURE__*/React.createElement(\"a\", {\n    className: \"post-detail__author\",\n    href: author.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 50\n    }\n  }, author.name))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-detail__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }\n  }, documentToReactComponents(content, richTextOptions)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-detail__author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Author, Object.assign({}, author, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }))));\n};\n\nexport default Detail;","map":{"version":3,"sources":["/Users/jennynguyen/Beta/keta-blog/src/containers/Detail/index.js"],"names":["React","Author","useParams","PostContext","useContext","BLOCKS","documentToReactComponents","Detail","props","slug","context","getPost","detail","title","category","author","dateCreated","content","console","log","richTextOptions","renderNode","EMBEDDED_ASSET","node","description","file","data","target","fields","mimeType","contentType","mimeGroup","split","url","details","fileName","backgroundColor","color","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Author from '../../components/Author';\nimport { useParams } from 'react-router-dom'\nimport {PostContext} from '../../context';\nimport {useContext} from 'react';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer';\n\nconst Detail = (props) => {\n\tlet { slug } = useParams();\n\tlet context = useContext(PostContext);\n\tlet {getPost} = context;\n\tlet detail = getPost(slug);\n\t\n\n\tif ( ! detail) {\n\t\treturn <p>not found</p>;\n\t} \n\n\tlet {title, category, author, dateCreated, content} = detail;\n\tconsole.log(author);\n\n\tconst richTextOptions = {\n  \t\trenderNode: {\n\t\t    [BLOCKS.EMBEDDED_ASSET]: (node) => {\n\t\t      const { title, description, file } = node.data.target.fields;\n\t\t      const mimeType = file.contentType\n\t\t      const mimeGroup = mimeType.split('/')[0]\n\n\t\t      switch (mimeGroup) {\n\t\t        case 'image':\n\t\t          return <img className=\"img-responsive\"\n\t\t            title={ title ? title : null}\n\t\t            alt={description ?  description : null}\n\t\t            src={file.url}\n\t\t          />\n\t\t        case 'application':\n\t\t          return <a\n\t\t            alt={description ?  description : null}\n\t\t            href={file.url}\n\t\t            >{ title ? title : file.details.fileName }\n\t\t          </a>\n\t\t        default:\n\t\t          return <span style={{backgroundColor: 'red', color: 'white'}}> {mimeType} embedded asset </span>\n\t\t      }\n\t\t      \n\t\t    }\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"content-container post-detail\">\n\t\t\t<header className=\"post-detail__entry-header\">\n\t\t\t\t<a href=\"!#\" className=\"post-detail__cat\">{category}</a>\n\t\t\t\t<h1 className=\"post-detail__title\">{title}</h1>\n\t\t\t\t<div className=\"post-detail__entry-meta\">\n\t\t\t\t\t<span className=\"post-detail__posted-on\">\n\t\t\t\t\t\tPosted on&nbsp;\n\t\t\t\t\t\t<time className=\"post-detail__datetime\" dateTime=\"2019-08-08T13:56:34+00:00\">{dateCreated}</time>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span className=\"post-detail__byline\">\n\t\t\t\t\t\t<span className=\"post-detail__by\">&nbsp;by <a className=\"post-detail__author\" href={author.url}>{author.name}</a></span>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t\t<div className=\"post-detail__content\">\n\t\t\t\t{ documentToReactComponents (content, richTextOptions) }\n\t\t\t</div>\n\n\t\t\t<div className=\"post-detail__author\">\n\t\t\t\t<Author {...author} />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Detail;"]},"metadata":{},"sourceType":"module"}